name: Snap Build

on:
 push:
   branches:
     - teste10

# on:
#   pull_request: # Triggers the workflow on pull requests targeting the main branch
#     types: [opened, synchronize, reopened]
#   push:
#     branches:
#       - main # Whenever a commit is pushed to main
#     tags:
#       - 'v*' # Whenever a new version tag is pushed

jobs:
  # build-and-publish:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       id: checkout
  #       uses: actions/checkout@v4
  #     - name: Install Snapcraft and setup LXD
  #       id: prepare-env
  #       run: |
  #         sudo iptables -P FORWARD ACCEPT
  #         sudo snap install --channel stable --classic snapcraft
  #         sudo snap install lxd
  #         sudo lxd init --auto
  #         sudo usermod -aG lxd $USER
  #     - name: Build snap and prepare the artifact for upload
  #       id: build-snap
  #       run: |
  #         newgrp lxd <<EOB
  #           snapcraft
  #         EOB
  #         SNAP_FILE=$(ls ./*.snap | head -n 1)
  #         echo "snap=$SNAP_FILE" >> $GITHUB_OUTPUT
  #     - name: Upload snap artifact locally
  #       id: upload-snap
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: esc-komatsu-ptxd-snap
  #         path: ${{ steps.build-snap.outputs.snap }}
  #     - name: Publish to Snap Store (edge)
  #       uses: snapcore/action-publish@v1
  #       env:
  #           SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
  #       with:
  #         snap: ${{ steps.build-snap.outputs.snap }}
  #         release: edge

  promote-to-candidate:

promote-to-candidate:
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  runs-on: ubuntu-latest
  needs: build-and-publish
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Snapcraft
      run: |
        sudo snap install snapcraft --classic --channel=stable

    - name: Get snap name from snapcraft.yaml
      id: snap-name
      run: |
        NAME=$(grep '^name:' snap/snapcraft.yaml | awk '{print $2}')
        echo "snap_name=$NAME" >> $GITHUB_OUTPUT

    - name: Promote edge to candidate
      run: |
        REV=$(snapcraft list-revisions ${{ steps.snap-name.outputs.snap_name }} | awk '/edge/{print $1; exit}')
        echo "Promoting revision $REV of ${{ steps.snap-name.outputs.snap_name }} to candidate"
        snapcraft release ${{ steps.snap-name.outputs.snap_name }} $REV candidate
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}

    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # runs-on: ubuntu-latest
    # needs: build-and-publish
    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v4

    #   - name: Install Snapcraft CLI
    #     run: |
    #       sudo snap install --channel stable --classic snapcraft
    #   - name: Get snap name from snapcraft.yaml
    #     id: snap-name
    #   - name: Promote edge to candidate
    #     run: |
    #       echo "--------------------- $SNAP_NAME ---------------------"
    #       REV=$(snapcraft list-revisions ${} --channel=edge | awk 'NR==2 {print $1}')
    #       snapcraft release ${{ steps.snap-name.outputs.snap_name }} $REV candidate
    #     env:
    #       SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}

  # release-to-stable:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ubuntu-latest
  #   needs: build-and-publish
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Install Snapcraft CLI
  #       run: |
  #         sudo snap install --channel stable --classic snapcraft
  #     - name: Get snap name from snapcraft.yaml
  #       id: snap-name
  #       run: |
  #         NAME=$(grep '^name:' snap/snapcraft.yaml | awk '{print $2}')
  #         echo "snap_name=$NAME" >> $GITHUB_OUTPUT
  #     - name: release to stable
  #       run: |
  #         REV=$(snapcraft list-revisions ${{ steps.snap-name.outputs.snap_name }} --channel=edge | awk 'NR==2 {print $1}')
  #         snapcraft release ${{ steps.snap-name.outputs.snap_name }} $REV stable
  #       env:
  #         SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}